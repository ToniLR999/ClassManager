name: Railway Scheduler

on:
  schedule:
    - cron: "*/15 * * * *"   # cada 15 min (cron en UTC)
  workflow_dispatch: {}

jobs:
  scheduler:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
      TIMEZONE: Europe/Madrid
      BUSINESS_START: "10:00"
      BUSINESS_END: "19:00"

    steps:
      - name: Alternar estado del servicio en Railway
        run: |
          set -euo pipefail
          export TZ="$TIMEZONE"

          current_day=$(date +%u)    # 1=Lunes, 7=Domingo
          current_time=$(date +%H:%M)

          echo "🕐 Hora actual: $(date '+%Y-%m-%d %H:%M %Z')"
          echo "📅 Día de la semana: $current_day (1=Lunes, 7=Domingo)"
          echo "⏰ Hora actual: $current_time"
          echo "📝 Horario de negocio: $BUSINESS_START - $BUSINESS_END"

          if [ "$current_day" -ge 1 ] && [ "$current_day" -le 5 ] && \
             [[ "$current_time" > "$BUSINESS_START" ]] && [[ "$current_time" < "$BUSINESS_END" ]]; then
            pause=false
            echo "✅ Dentro de horario laboral, reanudando servicio..."
          else
            pause=true
            echo "🚫 Fuera de horario laboral, pausando servicio..."
          fi

          query='mutation($serviceId: ID!, $pause: Boolean!) { serviceUpdate(id: $serviceId, pause: $pause) { id } }'
          payload=$(printf '{"query":"%s","variables":{"serviceId":"%s","pause":%s}}' "$query" "$RAILWAY_SERVICE_ID" "$pause")

          resp=$(curl -sS -w "HTTP_CODE:%{http_code}" -X POST "https://backboard.railway.app/graphql/v2" \
            -H "Authorization: Bearer $RAILWAY_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$payload")

          echo "📡 Respuesta de Railway:"
          echo "$resp"
