# ===========================================
# CONFIGURACIÓN DE PRODUCCIÓN OPTIMIZADA PARA MEMORIA
# ===========================================

# Configuración de la aplicación
spring.application.name=ClassManager

# ===========================================
# CONFIGURACIÓN DE BASE DE DATOS
# ===========================================
# Railway proporciona DATABASE_URL automáticamente
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/ClassManager}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de JPA para producción optimizada
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# Pool Hikari OPTIMIZADO para ahorrar memoria
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=5000
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.max-lifetime=180000
spring.datasource.hikari.leak-detection-threshold=15000

# Tuning de Hibernate para MÍNIMO uso de memoria
spring.jpa.properties.hibernate.jdbc.fetch_size=25
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.default_batch_fetch_size=16
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

# ===========================================
# CONFIGURACIÓN DE SEGURIDAD
# ===========================================
# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION:86400000}

# ===========================================
# CONFIGURACIÓN DE EMAIL
# ===========================================
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.from=${MAIL_USERNAME:grodt.devmail@gmail.com}
spring.mail.properties.mail.smtp.localhost=localhost
spring.mail.properties.mail.smtp.quitwait=false

# ===========================================
# CONFIGURACIÓN DE LOGGING OPTIMIZADA
# ===========================================
# Logging MÍNIMO para ahorrar memoria
logging.level.root=ERROR
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=ERROR
logging.level.org.springframework.security=WARN
logging.level.com.tonilr.ClassManager=INFO

# Configurar patrón de logging simplificado
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===========================================
# CONFIGURACIÓN DE SERVIDOR
# ===========================================
# Puerto del servidor
server.port=${PORT:8080}
server.tomcat.threads.max=15
server.tomcat.threads.min-spare=2
server.tomcat.max-connections=1024
server.tomcat.connection-timeout=1500
server.tomcat.max-http-form-post-size=1MB
server.tomcat.max-swallow-size=1MB
server.tomcat.accept-count=50

# Configuración de CORS para producción
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://classmanager-production.up.railway.app}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# ===========================================
# CONFIGURACIÓN DE JACKSON
# ===========================================
# Configurar Jackson para manejar lazy loading
spring.jackson.serialization.fail-on-empty-beans=false

# ===========================================
# CONFIGURACIÓN DE ACTUATOR (MONITORING)
# ===========================================
# Endpoints de Actuator para monitoreo (solo esenciales)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized

# ===========================================
# CONFIGURACIÓN DE CACHE OPTIMIZADA
# ===========================================
# Configuración de cache para MÍNIMO uso de memoria
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=200,expireAfterWrite=600s,expireAfterAccess=600s

# ===========================================
# CONFIGURACIÓN DE SEGURIDAD ADICIONAL
# ===========================================
# Headers de seguridad
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Configuración de compresión para reducir tráfico
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Configuración de sesión para ahorrar memoria
server.servlet.session.timeout=30m
server.servlet.session.cookie.max-age=1800 

# Inicialización perezosa y desactivar devtools en producción
spring.main.lazy-initialization=true
spring.main.banner-mode=off
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false